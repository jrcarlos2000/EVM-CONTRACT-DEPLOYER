{
  "address": "0xb826CBD8aa01BD3Aa43594A21d5Aa7AD70802f41",
  "abi": [
    {
      "inputs": [],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "getRandom",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "addr",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getUserByAddress",
      "outputs": [
        {
          "components": [
            {
              "internalType": "string",
              "name": "url",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "name",
              "type": "string"
            },
            {
              "internalType": "uint256",
              "name": "involvementBasis",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "imgType",
              "type": "uint256"
            }
          ],
          "internalType": "struct UserRegistry.User",
          "name": "myUser",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_url",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_name",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "_imgType",
          "type": "uint256"
        }
      ],
      "name": "modifyUser",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "userCount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "transactionHash": "0xf89bf0ca0cf8585dae054a10902fcab5c263bf9d5f7bd436a7c0062b843e5c19",
  "receipt": {
    "to": null,
    "from": "0x17BAd8cbCDeC350958dF0Bfe01E284dd8Fec3fcD",
    "contractAddress": "0xb826CBD8aa01BD3Aa43594A21d5Aa7AD70802f41",
    "transactionIndex": 0,
    "gasUsed": "341581",
    "logsBloom": "0x
    "blockHash": "0x600a4ad00fe31b960f62c1aa304ac5c2532c1154db150d85ce9db0f9d14069ed",
    "transactionHash": "0xf89bf0ca0cf8585dae054a10902fcab5c263bf9d5f7bd436a7c0062b843e5c19",
    "logs": [],
    "blockNumber": 27864495,
    "cumulativeGasUsed": "341581",
    "status": 1,
    "byzantium": true
  },
  "args": [],
  "numDeployments": 1,
  "solcInputHash": "beb33a030c9e131d3fef4c0372254104",
  "metadata": "{\"compiler\":{\"version\":\"0.8.4+commit.c7e474f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"getRandom\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"addr\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getUserByAddress\",\"outputs\":[{\"components\":[{\"internalType\":\"string\",\"name\":\"url\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"involvementBasis\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"imgType\",\"type\":\"uint256\"}],\"internalType\":\"struct UserRegistry.User\",\"name\":\"myUser\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_url\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_name\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"_imgType\",\"type\":\"uint256\"}],\"name\":\"modifyUser\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"userCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/UserRegistry.sol\":\"UserRegistry\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/UserRegistry.sol\":{\"content\":\"pragma solidity ^0.8.0;\\n//version C\\ncontract UserRegistry {\\n    uint256 public userCount;\\n    address immutable owner;\\n    struct User {\\n        string url;\\n        string name;\\n        uint256 involvementBasis;\\n        uint256 imgType;\\n    }\\n    \\n    mapping(address => User) userByAddress;\\n    modifier onlyOwner () {\\n        require(msg.sender == owner , \\\"caller is not owner\\\");\\n        _;\\n    }\\n    constructor () {\\n        owner = msg.sender;\\n\\n    }\\n    function getUserByAddress() external view returns (User memory myUser){\\n        myUser = userByAddress[msg.sender];\\n    }\\n    function modifyUser(string memory _url, string memory _name, uint256 _imgType) external {\\n        User storage newUser = userByAddress[msg.sender];\\n        newUser.url  = _url;\\n        newUser.name = _name;\\n        newUser.imgType = _imgType;\\n    }\\n\\n    function getRandom() public view returns (bytes32 addr) {\\n        assembly {\\n            let freemem := mload(0x40)\\n            let start_addr := add(freemem, 0)\\n            if iszero(staticcall(gas(), 0x18, 0, 0, start_addr, 32)) {\\n              invalid()\\n            }\\n            addr := mload(freemem)\\n        }\\n    }\\n}\",\"keccak256\":\"0xbdea777bc80804f30b68c467c821632bfffeb8a748123cc6f0a8555485cd05ff\"}},\"version\":1}",
  "bytecode": "0x60a060405234801561001057600080fd5b5033606081901b60805261053661002f600039600050506105366000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c806307973ccf146100515780634073b1321461006d5780634be5924514610082578063aacc5a1714610097575b600080fd5b61005a60005481565b6040519081526020015b60405180910390f35b61007561009f565b6040516100649190610455565b6100956100903660046103a0565b610220565b005b61005a610263565b6100ca6040518060800160405280606081526020016060815260200160008152602001600081525090565b33600090815260016020526040908190208151608081019092528054829082906100f3906104af565b80601f016020809104026020016040519081016040528092919081815260200182805461011f906104af565b801561016c5780601f106101415761010080835404028352916020019161016c565b820191906000526020600020905b81548152906001019060200180831161014f57829003601f168201915b50505050508152602001600182018054610185906104af565b80601f01602080910402602001604051908101604052809291908181526020018280546101b1906104af565b80156101fe5780601f106101d3576101008083540402835291602001916101fe565b820191906000526020600020905b8154815290600101906020018083116101e157829003601f168201915b5050505050815260200160028201548152602001600382015481525050905090565b33600090815260016020908152604090912084519091610244918391870190610280565b50825161025a9060018301906020860190610280565b50600301555050565b60405160009080602081848060185afa61027957fe5b5051919050565b82805461028c906104af565b90600052602060002090601f0160209004810192826102ae57600085556102f4565b82601f106102c757805160ff19168380011785556102f4565b828001600101855582156102f4579182015b828111156102f45782518255916020019190600101906102d9565b50610300929150610304565b5090565b5b808211156103005760008155600101610305565b600082601f830112610329578081fd5b813567ffffffffffffffff80821115610344576103446104ea565b604051601f8301601f19908116603f0116810190828211818310171561036c5761036c6104ea565b81604052838152866020858801011115610384578485fd5b8360208701602083013792830160200193909352509392505050565b6000806000606084860312156103b4578283fd5b833567ffffffffffffffff808211156103cb578485fd5b6103d787838801610319565b945060208601359150808211156103ec578384fd5b506103f986828701610319565b925050604084013590509250925092565b60008151808452815b8181101561042f57602081850181015186830182015201610413565b818111156104405782602083870101525b50601f01601f19169290920160200192915050565b60208152600082516080602084015261047160a084018261040a565b90506020840151601f1984830301604085015261048e828261040a565b91505060408401516060840152606084015160808401528091505092915050565b600181811c908216806104c357607f821691505b602082108114156104e457634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052604160045260246000fdfea264697066735822122071fae98ba6997163014f500d2977e6548350b53b100bf215be3c9b162dbe9b8064736f6c63430008040033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b506004361061004c5760003560e01c806307973ccf146100515780634073b1321461006d5780634be5924514610082578063aacc5a1714610097575b600080fd5b61005a60005481565b6040519081526020015b60405180910390f35b61007561009f565b6040516100649190610455565b6100956100903660046103a0565b610220565b005b61005a610263565b6100ca6040518060800160405280606081526020016060815260200160008152602001600081525090565b33600090815260016020526040908190208151608081019092528054829082906100f3906104af565b80601f016020809104026020016040519081016040528092919081815260200182805461011f906104af565b801561016c5780601f106101415761010080835404028352916020019161016c565b820191906000526020600020905b81548152906001019060200180831161014f57829003601f168201915b50505050508152602001600182018054610185906104af565b80601f01602080910402602001604051908101604052809291908181526020018280546101b1906104af565b80156101fe5780601f106101d3576101008083540402835291602001916101fe565b820191906000526020600020905b8154815290600101906020018083116101e157829003601f168201915b5050505050815260200160028201548152602001600382015481525050905090565b33600090815260016020908152604090912084519091610244918391870190610280565b50825161025a9060018301906020860190610280565b50600301555050565b60405160009080602081848060185afa61027957fe5b5051919050565b82805461028c906104af565b90600052602060002090601f0160209004810192826102ae57600085556102f4565b82601f106102c757805160ff19168380011785556102f4565b828001600101855582156102f4579182015b828111156102f45782518255916020019190600101906102d9565b50610300929150610304565b5090565b5b808211156103005760008155600101610305565b600082601f830112610329578081fd5b813567ffffffffffffffff80821115610344576103446104ea565b604051601f8301601f19908116603f0116810190828211818310171561036c5761036c6104ea565b81604052838152866020858801011115610384578485fd5b8360208701602083013792830160200193909352509392505050565b6000806000606084860312156103b4578283fd5b833567ffffffffffffffff808211156103cb578485fd5b6103d787838801610319565b945060208601359150808211156103ec578384fd5b506103f986828701610319565b925050604084013590509250925092565b60008151808452815b8181101561042f57602081850181015186830182015201610413565b818111156104405782602083870101525b50601f01601f19169290920160200192915050565b60208152600082516080602084015261047160a084018261040a565b90506020840151601f1984830301604085015261048e828261040a565b91505060408401516060840152606084015160808401528091505092915050565b600181811c908216806104c357607f821691505b602082108114156104e457634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052604160045260246000fdfea264697066735822122071fae98ba6997163014f500d2977e6548350b53b100bf215be3c9b162dbe9b8064736f6c63430008040033",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 3,
        "contract": "contracts/UserRegistry.sol:UserRegistry",
        "label": "userCount",
        "offset": 0,
        "slot": "0",
        "type": "t_uint256"
      },
      {
        "astId": 19,
        "contract": "contracts/UserRegistry.sol:UserRegistry",
        "label": "userByAddress",
        "offset": 0,
        "slot": "1",
        "type": "t_mapping(t_address,t_struct(User)14_storage)"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_mapping(t_address,t_struct(User)14_storage)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => struct UserRegistry.User)",
        "numberOfBytes": "32",
        "value": "t_struct(User)14_storage"
      },
      "t_string_storage": {
        "encoding": "bytes",
        "label": "string",
        "numberOfBytes": "32"
      },
      "t_struct(User)14_storage": {
        "encoding": "inplace",
        "label": "struct UserRegistry.User",
        "members": [
          {
            "astId": 7,
            "contract": "contracts/UserRegistry.sol:UserRegistry",
            "label": "url",
            "offset": 0,
            "slot": "0",
            "type": "t_string_storage"
          },
          {
            "astId": 9,
            "contract": "contracts/UserRegistry.sol:UserRegistry",
            "label": "name",
            "offset": 0,
            "slot": "1",
            "type": "t_string_storage"
          },
          {
            "astId": 11,
            "contract": "contracts/UserRegistry.sol:UserRegistry",
            "label": "involvementBasis",
            "offset": 0,
            "slot": "2",
            "type": "t_uint256"
          },
          {
            "astId": 13,
            "contract": "contracts/UserRegistry.sol:UserRegistry",
            "label": "imgType",
            "offset": 0,
            "slot": "3",
            "type": "t_uint256"
          }
        ],
        "numberOfBytes": "128"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}